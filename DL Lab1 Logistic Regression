{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":290},"id":"eDIKPmiF6VKd","executionInfo":{"status":"ok","timestamp":1725504353484,"user_tz":-330,"elapsed":1651,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}},"outputId":"268f0a5e-804f-442c-94fa-6e2972002428"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   mean radius  mean texture  mean perimeter  mean area  mean smoothness  \\\n","0        17.99         10.38          122.80     1001.0          0.11840   \n","1        20.57         17.77          132.90     1326.0          0.08474   \n","2        19.69         21.25          130.00     1203.0          0.10960   \n","3        11.42         20.38           77.58      386.1          0.14250   \n","4        20.29         14.34          135.10     1297.0          0.10030   \n","\n","   mean compactness  mean concavity  mean concave points  mean symmetry  \\\n","0           0.27760          0.3001              0.14710         0.2419   \n","1           0.07864          0.0869              0.07017         0.1812   \n","2           0.15990          0.1974              0.12790         0.2069   \n","3           0.28390          0.2414              0.10520         0.2597   \n","4           0.13280          0.1980              0.10430         0.1809   \n","\n","   mean fractal dimension  ...  worst radius  worst texture  worst perimeter  \\\n","0                 0.07871  ...         25.38          17.33           184.60   \n","1                 0.05667  ...         24.99          23.41           158.80   \n","2                 0.05999  ...         23.57          25.53           152.50   \n","3                 0.09744  ...         14.91          26.50            98.87   \n","4                 0.05883  ...         22.54          16.67           152.20   \n","\n","   worst area  worst smoothness  worst compactness  worst concavity  \\\n","0      2019.0            0.1622             0.6656           0.7119   \n","1      1956.0            0.1238             0.1866           0.2416   \n","2      1709.0            0.1444             0.4245           0.4504   \n","3       567.7            0.2098             0.8663           0.6869   \n","4      1575.0            0.1374             0.2050           0.4000   \n","\n","   worst concave points  worst symmetry  worst fractal dimension  \n","0                0.2654          0.4601                  0.11890  \n","1                0.1860          0.2750                  0.08902  \n","2                0.2430          0.3613                  0.08758  \n","3                0.2575          0.6638                  0.17300  \n","4                0.1625          0.2364                  0.07678  \n","\n","[5 rows x 30 columns]"],"text/html":["\n","  <div id=\"df-76ee1dca-e8ca-499f-9492-f6cd6c559799\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mean radius</th>\n","      <th>mean texture</th>\n","      <th>mean perimeter</th>\n","      <th>mean area</th>\n","      <th>mean smoothness</th>\n","      <th>mean compactness</th>\n","      <th>mean concavity</th>\n","      <th>mean concave points</th>\n","      <th>mean symmetry</th>\n","      <th>mean fractal dimension</th>\n","      <th>...</th>\n","      <th>worst radius</th>\n","      <th>worst texture</th>\n","      <th>worst perimeter</th>\n","      <th>worst area</th>\n","      <th>worst smoothness</th>\n","      <th>worst compactness</th>\n","      <th>worst concavity</th>\n","      <th>worst concave points</th>\n","      <th>worst symmetry</th>\n","      <th>worst fractal dimension</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>17.99</td>\n","      <td>10.38</td>\n","      <td>122.80</td>\n","      <td>1001.0</td>\n","      <td>0.11840</td>\n","      <td>0.27760</td>\n","      <td>0.3001</td>\n","      <td>0.14710</td>\n","      <td>0.2419</td>\n","      <td>0.07871</td>\n","      <td>...</td>\n","      <td>25.38</td>\n","      <td>17.33</td>\n","      <td>184.60</td>\n","      <td>2019.0</td>\n","      <td>0.1622</td>\n","      <td>0.6656</td>\n","      <td>0.7119</td>\n","      <td>0.2654</td>\n","      <td>0.4601</td>\n","      <td>0.11890</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20.57</td>\n","      <td>17.77</td>\n","      <td>132.90</td>\n","      <td>1326.0</td>\n","      <td>0.08474</td>\n","      <td>0.07864</td>\n","      <td>0.0869</td>\n","      <td>0.07017</td>\n","      <td>0.1812</td>\n","      <td>0.05667</td>\n","      <td>...</td>\n","      <td>24.99</td>\n","      <td>23.41</td>\n","      <td>158.80</td>\n","      <td>1956.0</td>\n","      <td>0.1238</td>\n","      <td>0.1866</td>\n","      <td>0.2416</td>\n","      <td>0.1860</td>\n","      <td>0.2750</td>\n","      <td>0.08902</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>19.69</td>\n","      <td>21.25</td>\n","      <td>130.00</td>\n","      <td>1203.0</td>\n","      <td>0.10960</td>\n","      <td>0.15990</td>\n","      <td>0.1974</td>\n","      <td>0.12790</td>\n","      <td>0.2069</td>\n","      <td>0.05999</td>\n","      <td>...</td>\n","      <td>23.57</td>\n","      <td>25.53</td>\n","      <td>152.50</td>\n","      <td>1709.0</td>\n","      <td>0.1444</td>\n","      <td>0.4245</td>\n","      <td>0.4504</td>\n","      <td>0.2430</td>\n","      <td>0.3613</td>\n","      <td>0.08758</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>11.42</td>\n","      <td>20.38</td>\n","      <td>77.58</td>\n","      <td>386.1</td>\n","      <td>0.14250</td>\n","      <td>0.28390</td>\n","      <td>0.2414</td>\n","      <td>0.10520</td>\n","      <td>0.2597</td>\n","      <td>0.09744</td>\n","      <td>...</td>\n","      <td>14.91</td>\n","      <td>26.50</td>\n","      <td>98.87</td>\n","      <td>567.7</td>\n","      <td>0.2098</td>\n","      <td>0.8663</td>\n","      <td>0.6869</td>\n","      <td>0.2575</td>\n","      <td>0.6638</td>\n","      <td>0.17300</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20.29</td>\n","      <td>14.34</td>\n","      <td>135.10</td>\n","      <td>1297.0</td>\n","      <td>0.10030</td>\n","      <td>0.13280</td>\n","      <td>0.1980</td>\n","      <td>0.10430</td>\n","      <td>0.1809</td>\n","      <td>0.05883</td>\n","      <td>...</td>\n","      <td>22.54</td>\n","      <td>16.67</td>\n","      <td>152.20</td>\n","      <td>1575.0</td>\n","      <td>0.1374</td>\n","      <td>0.2050</td>\n","      <td>0.4000</td>\n","      <td>0.1625</td>\n","      <td>0.2364</td>\n","      <td>0.07678</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 30 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-76ee1dca-e8ca-499f-9492-f6cd6c559799')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-76ee1dca-e8ca-499f-9492-f6cd6c559799 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-76ee1dca-e8ca-499f-9492-f6cd6c559799');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-44997794-da35-447f-88bf-c49efa8b93e8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-44997794-da35-447f-88bf-c49efa8b93e8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-44997794-da35-447f-88bf-c49efa8b93e8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":5}],"source":["import pandas as pd\n","from sklearn.datasets import load_breast_cancer\n","cancer = load_breast_cancer()\n","df = pd.DataFrame(cancer.data,\n","                  columns=cancer.feature_names)\n","df.head()"]},{"cell_type":"code","source":["#missing values in the dataset\n","df.isnull().sum().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"loOV5RasARSj","executionInfo":{"status":"ok","timestamp":1725504353484,"user_tz":-330,"elapsed":14,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}},"outputId":"0b6ccabb-2506-45ce-ad95-b3266258ad60"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["#Make X, y and train and test sets\n","X = df\n","y = pd.Series(cancer.target)"],"metadata":{"id":"lxfJzOVZ6izl","executionInfo":{"status":"ok","timestamp":1725504353484,"user_tz":-330,"elapsed":12,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"ReCz7PsALbrz","executionInfo":{"status":"ok","timestamp":1725504353484,"user_tz":-330,"elapsed":12,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}},"outputId":"76ccdbca-c983-4172-aa98-414a338e212f"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","564    0\n","565    0\n","566    0\n","567    0\n","568    1\n","Length: 569, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>564</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>565</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>566</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>567</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>568</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>569 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["#create train and test sets\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split( X, y, test_size=0.20,\n","                                                    shuffle=True, random_state=2)"],"metadata":{"id":"J7Jf-OP06j4j","executionInfo":{"status":"ok","timestamp":1725504353484,"user_tz":-330,"elapsed":11,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["print(X_train.shape)\n","print( X_test.shape)\n","print( y_train.shape)\n","print( y_test.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WQ3cDK3ZLyXP","executionInfo":{"status":"ok","timestamp":1725504353484,"user_tz":-330,"elapsed":11,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}},"outputId":"6855357b-692d-49e0-e7a2-c12790095506"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["(455, 30)\n","(114, 30)\n","(455,)\n","(114,)\n"]}]},{"cell_type":"markdown","source":["#Build the logistic regression model with Scikit-learn"],"metadata":{"id":"djR54AHhAvcc"}},{"cell_type":"code","source":[" #logistic regression model with Scikit-learn\n"," # Initialize a logistic regression model\n","from sklearn.linear_model import LogisticRegression\n","log_reg_model = LogisticRegression( max_iter=2500,\n","                                   random_state=42)\n","# Train (fit) the model\n","log_reg_model.fit(X_train, y_train)\n","# Make predictions\n","y_pred = log_reg_model.predict(X_test) # Predictions\n","y_true = y_test # True values\n","y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ITNd9RHNAgMC","executionInfo":{"status":"ok","timestamp":1725504354088,"user_tz":-330,"elapsed":613,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}},"outputId":"1f989bda-4cbb-4d7b-8420-add53b2ced64"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n","       1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1,\n","       0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1,\n","       0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1,\n","       1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1,\n","       0, 0, 1, 0])"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["# Model evaluation\n","from sklearn.metrics import accuracy_score\n","from sklearn.metrics import precision_recall_fscore_support\n","import numpy as np\n","print(\"Accuracy:\", np.round(accuracy_score(y_true, y_pred), 2))\n","precision, recall, fscore, _ = precision_recall_fscore_support(y_true, y_pred,\n","                                                               average='binary')\n","print(\"Precision:\", np.round(precision, 2))\n","print(\"Recall:\", np.round(recall, 2))\n","print(\"F-Score:\", np.round(fscore, 2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XFt051r0M5hu","executionInfo":{"status":"ok","timestamp":1725504354690,"user_tz":-330,"elapsed":11,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}},"outputId":"d86c4528-3fad-494a-fb50-763ff03b8e96"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.93\n","Precision: 0.94\n","Recall: 0.94\n","F-Score: 0.94\n"]}]},{"cell_type":"code","source":["# Make the confusion matrix\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","from sklearn.metrics import confusion_matrix\n","cf_matrix = confusion_matrix(y_true, y_pred)\n","print(\"\\nConfusion Matrix\")\n","sns.heatmap(cf_matrix, annot=True, cmap='Blues')\n","plt.xlabel('Predicted', fontsize=12)\n","plt.ylabel('True', fontsize=12)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":505},"id":"XnP-weisNZN7","executionInfo":{"status":"ok","timestamp":1725504354691,"user_tz":-330,"elapsed":11,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}},"outputId":"a5b9e95e-5c25-4130-9ab6-86b3015f2d5a"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Confusion Matrix\n"]},{"output_type":"execute_result","data":{"text/plain":["Text(50.722222222222214, 0.5, 'True')"]},"metadata":{},"execution_count":13},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["#Build the logistic regression model with a neural network mindset in Keras"],"metadata":{"id":"_gBeg8gqAyzT"}},{"cell_type":"code","source":["from keras.models import Sequential\n","import numpy as np\n","import tensorflow as tf\n","np.random.seed(42)\n","tf.random.set_seed(42)"],"metadata":{"id":"pInSZBxrAlGB","executionInfo":{"status":"ok","timestamp":1725504359808,"user_tz":-330,"elapsed":5124,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["from tensorflow.keras.layers import InputLayer\n","from tensorflow.keras.layers import Dense\n","ANN_model = Sequential()\n","ANN_model.add(InputLayer(input_shape=(30, )))\n","# No hidden layers\n","ANN_model.add(Dense(1, activation='sigmoid'))"],"metadata":{"id":"0R2VaP8ZA9lB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1725504359809,"user_tz":-330,"elapsed":13,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}},"outputId":"39586fb2-d2ef-482c-d7fb-bfb32ce7946b"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/keras/src/layers/core/input_layer.py:26: UserWarning: Argument `input_shape` is deprecated. Use `shape` instead.\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["ANN_model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":170},"id":"bMHCmt2LA93h","executionInfo":{"status":"ok","timestamp":1725504359810,"user_tz":-330,"elapsed":13,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}},"outputId":"7a533c76-a97f-44a9-8aa9-928b9006e128"},"execution_count":16,"outputs":[{"output_type":"display_data","data":{"text/plain":["\u001b[1mModel: \"sequential\"\u001b[0m\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential\"</span>\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n","┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                        \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape               \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m        Param #\u001b[0m\u001b[1m \u001b[0m┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n","│ dense (\u001b[38;5;33mDense\u001b[0m)                        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)                   │              \u001b[38;5;34m31\u001b[0m │\n","└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n","┃<span style=\"font-weight: bold\"> Layer (type)                         </span>┃<span style=\"font-weight: bold\"> Output Shape                </span>┃<span style=\"font-weight: bold\">         Param # </span>┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n","│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)                   │              <span style=\"color: #00af00; text-decoration-color: #00af00\">31</span> │\n","└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Total params: \u001b[0m\u001b[38;5;34m31\u001b[0m (124.00 B)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">31</span> (124.00 B)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m31\u001b[0m (124.00 B)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">31</span> (124.00 B)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n","</pre>\n"]},"metadata":{}}]},{"cell_type":"code","source":["optimizer=tf.keras.optimizers.Adam(learning_rate=0.05)\n","ANN_model.compile(optimizer=optimizer,\n","                  loss='binary_crossentropy',\n","                  metrics=['accuracy'])"],"metadata":{"id":"gDWXj8NHA_MA","executionInfo":{"status":"ok","timestamp":1725504359810,"user_tz":-330,"elapsed":12,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["history = ANN_model.fit(X_train, y_train,\n","                        epochs=10, batch_size=32,\n","                        validation_split=0.2,\n","                        shuffle=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Dwwzjw-3BBA3","executionInfo":{"status":"ok","timestamp":1725504362028,"user_tz":-330,"elapsed":2230,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}},"outputId":"d938a530-cf95-46e4-bdaa-ad6d25ddffa2"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","\u001b[1m12/12\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 21ms/step - accuracy: 0.5104 - loss: 14.7921 - val_accuracy: 0.6813 - val_loss: 4.2699\n","Epoch 2/10\n","\u001b[1m12/12\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.5920 - loss: 4.9688 - val_accuracy: 0.6484 - val_loss: 2.0242\n","Epoch 3/10\n","\u001b[1m12/12\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.7761 - loss: 1.5799 - val_accuracy: 0.8901 - val_loss: 0.5345\n","Epoch 4/10\n","\u001b[1m12/12\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8376 - loss: 1.1820 - val_accuracy: 0.8901 - val_loss: 1.1093\n","Epoch 5/10\n","\u001b[1m12/12\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8558 - loss: 1.4843 - val_accuracy: 0.8791 - val_loss: 0.4449\n","Epoch 6/10\n","\u001b[1m12/12\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8503 - loss: 0.9060 - val_accuracy: 0.9451 - val_loss: 0.2459\n","Epoch 7/10\n","\u001b[1m12/12\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8800 - loss: 0.6675 - val_accuracy: 0.9451 - val_loss: 0.1846\n","Epoch 8/10\n","\u001b[1m12/12\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.9021 - loss: 0.5895 - val_accuracy: 0.9451 - val_loss: 0.1571\n","Epoch 9/10\n","\u001b[1m12/12\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8972 - loss: 0.4878 - val_accuracy: 0.9341 - val_loss: 0.1214\n","Epoch 10/10\n","\u001b[1m12/12\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.8713 - loss: 0.5705 - val_accuracy: 0.9341 - val_loss: 0.1043\n"]}]},{"cell_type":"code","source":["# Plot training and validation accuracy scores\n","# against the number of epochs.\n","plt.plot(history.history['accuracy'], label='Train')\n","plt.plot(history.history['val_accuracy'], label='Validation')\n","plt.ylabel('Accuracy')\n","plt.xlabel('Epoch')\n","plt.title('Model Accuracy')\n","plt.legend(loc='upper left')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"6v8OGD2jBJaj","executionInfo":{"status":"ok","timestamp":1725504362921,"user_tz":-330,"elapsed":897,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}},"outputId":"c1eabc55-787d-47f7-d002-d2dd269f3fec"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x79b787202260>"]},"metadata":{},"execution_count":19},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Plot training and validation loss scores\n","# against the number of epochs.\n","plt.plot(history.history['loss'], label='Train')\n","plt.plot(history.history['val_loss'], label='Validation')\n","plt.ylabel('Loss')\n","plt.xlabel('Epoch')\n","plt.title('Model Loss')\n","plt.legend(loc='upper right')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"UGLGBbtMBLBi","executionInfo":{"status":"ok","timestamp":1725504362921,"user_tz":-330,"elapsed":14,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}},"outputId":"1371abe5-65e5-44a6-da16-7f052e4c4dbc"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x79b787203130>"]},"metadata":{},"execution_count":20},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#Evaluate the model on the test data\n","test_loss, test_acc = ANN_model.evaluate(X_test, y_test)\n","print(\"Test loss:\", test_loss)\n","print(\"Test accuracy:\", test_acc)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r_aDSKw5BMYZ","executionInfo":{"status":"ok","timestamp":1725504362922,"user_tz":-330,"elapsed":13,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}},"outputId":"8959f314-ff23-4321-acdd-f99b12368610"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8944 - loss: 0.4317 \n","Test loss: 0.4908877909183502\n","Test accuracy: 0.8947368264198303\n"]}]},{"cell_type":"markdown","source":["#Another dataset"],"metadata":{"id":"J2MNq_SdDKoz"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SntTrlG8OgoR","executionInfo":{"status":"ok","timestamp":1725504366954,"user_tz":-330,"elapsed":4043,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}},"outputId":"edd4033e-345c-4f37-917e-2595a1d22a8f"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","data = pd.read_csv('/content/drive/MyDrive/DL/framingham_heart_disease.csv')"],"metadata":{"id":"nD7tLeACDOBd","executionInfo":{"status":"ok","timestamp":1725505075111,"user_tz":-330,"elapsed":1035,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"Mp8ueUw-H4m5","executionInfo":{"status":"ok","timestamp":1725505083779,"user_tz":-330,"elapsed":605,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}},"outputId":"86b6e3f5-bf95-4699-a30a-b9f3efe804cc"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      male  age  education  currentSmoker  cigsPerDay  BPMeds  \\\n","0        1   39        4.0              0         0.0     0.0   \n","1        0   46        2.0              0         0.0     0.0   \n","2        1   48        1.0              1        20.0     0.0   \n","3        0   61        3.0              1        30.0     0.0   \n","4        0   46        3.0              1        23.0     0.0   \n","...    ...  ...        ...            ...         ...     ...   \n","4233     1   50        1.0              1         1.0     0.0   \n","4234     1   51        3.0              1        43.0     0.0   \n","4235     0   48        2.0              1        20.0     NaN   \n","4236     0   44        1.0              1        15.0     0.0   \n","4237     0   52        2.0              0         0.0     0.0   \n","\n","      prevalentStroke  prevalentHyp  diabetes  totChol  sysBP  diaBP    BMI  \\\n","0                   0             0         0    195.0  106.0   70.0  26.97   \n","1                   0             0         0    250.0  121.0   81.0  28.73   \n","2                   0             0         0    245.0  127.5   80.0  25.34   \n","3                   0             1         0    225.0  150.0   95.0  28.58   \n","4                   0             0         0    285.0  130.0   84.0  23.10   \n","...               ...           ...       ...      ...    ...    ...    ...   \n","4233                0             1         0    313.0  179.0   92.0  25.97   \n","4234                0             0         0    207.0  126.5   80.0  19.71   \n","4235                0             0         0    248.0  131.0   72.0  22.00   \n","4236                0             0         0    210.0  126.5   87.0  19.16   \n","4237                0             0         0    269.0  133.5   83.0  21.47   \n","\n","      heartRate  glucose  TenYearCHD  \n","0          80.0     77.0           0  \n","1          95.0     76.0           0  \n","2          75.0     70.0           0  \n","3          65.0    103.0           1  \n","4          85.0     85.0           0  \n","...         ...      ...         ...  \n","4233       66.0     86.0           1  \n","4234       65.0     68.0           0  \n","4235       84.0     86.0           0  \n","4236       86.0      NaN           0  \n","4237       80.0    107.0           0  \n","\n","[4238 rows x 16 columns]"],"text/html":["\n","  <div id=\"df-b3794f33-de53-4e1b-b0ac-43a329c13295\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>male</th>\n","      <th>age</th>\n","      <th>education</th>\n","      <th>currentSmoker</th>\n","      <th>cigsPerDay</th>\n","      <th>BPMeds</th>\n","      <th>prevalentStroke</th>\n","      <th>prevalentHyp</th>\n","      <th>diabetes</th>\n","      <th>totChol</th>\n","      <th>sysBP</th>\n","      <th>diaBP</th>\n","      <th>BMI</th>\n","      <th>heartRate</th>\n","      <th>glucose</th>\n","      <th>TenYearCHD</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>39</td>\n","      <td>4.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>195.0</td>\n","      <td>106.0</td>\n","      <td>70.0</td>\n","      <td>26.97</td>\n","      <td>80.0</td>\n","      <td>77.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>46</td>\n","      <td>2.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>250.0</td>\n","      <td>121.0</td>\n","      <td>81.0</td>\n","      <td>28.73</td>\n","      <td>95.0</td>\n","      <td>76.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>48</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>20.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>245.0</td>\n","      <td>127.5</td>\n","      <td>80.0</td>\n","      <td>25.34</td>\n","      <td>75.0</td>\n","      <td>70.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>61</td>\n","      <td>3.0</td>\n","      <td>1</td>\n","      <td>30.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>225.0</td>\n","      <td>150.0</td>\n","      <td>95.0</td>\n","      <td>28.58</td>\n","      <td>65.0</td>\n","      <td>103.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>46</td>\n","      <td>3.0</td>\n","      <td>1</td>\n","      <td>23.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>285.0</td>\n","      <td>130.0</td>\n","      <td>84.0</td>\n","      <td>23.10</td>\n","      <td>85.0</td>\n","      <td>85.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4233</th>\n","      <td>1</td>\n","      <td>50</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>313.0</td>\n","      <td>179.0</td>\n","      <td>92.0</td>\n","      <td>25.97</td>\n","      <td>66.0</td>\n","      <td>86.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4234</th>\n","      <td>1</td>\n","      <td>51</td>\n","      <td>3.0</td>\n","      <td>1</td>\n","      <td>43.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>207.0</td>\n","      <td>126.5</td>\n","      <td>80.0</td>\n","      <td>19.71</td>\n","      <td>65.0</td>\n","      <td>68.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4235</th>\n","      <td>0</td>\n","      <td>48</td>\n","      <td>2.0</td>\n","      <td>1</td>\n","      <td>20.0</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>248.0</td>\n","      <td>131.0</td>\n","      <td>72.0</td>\n","      <td>22.00</td>\n","      <td>84.0</td>\n","      <td>86.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4236</th>\n","      <td>0</td>\n","      <td>44</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>15.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>210.0</td>\n","      <td>126.5</td>\n","      <td>87.0</td>\n","      <td>19.16</td>\n","      <td>86.0</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4237</th>\n","      <td>0</td>\n","      <td>52</td>\n","      <td>2.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>269.0</td>\n","      <td>133.5</td>\n","      <td>83.0</td>\n","      <td>21.47</td>\n","      <td>80.0</td>\n","      <td>107.0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4238 rows × 16 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b3794f33-de53-4e1b-b0ac-43a329c13295')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b3794f33-de53-4e1b-b0ac-43a329c13295 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b3794f33-de53-4e1b-b0ac-43a329c13295');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1369a3c6-979c-490f-b944-40d68ca58f88\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1369a3c6-979c-490f-b944-40d68ca58f88')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1369a3c6-979c-490f-b944-40d68ca58f88 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_e1fb621c-fd1e-4c90-85ad-894b725f79f6\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e1fb621c-fd1e-4c90-85ad-894b725f79f6 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 4238,\n  \"fields\": [\n    {\n      \"column\": \"male\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 32,\n        \"max\": 70,\n        \"num_unique_values\": 39,\n        \"samples\": [\n          34,\n          70\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.019790689312203,\n        \"min\": 1.0,\n        \"max\": 4.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"currentSmoker\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cigsPerDay\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.92009358782776,\n        \"min\": 0.0,\n        \"max\": 70.0,\n        \"num_unique_values\": 33,\n        \"samples\": [\n          19.0,\n          4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BPMeds\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.16958356790200033,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"prevalentStroke\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"prevalentHyp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diabetes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"totChol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 44.590334318749456,\n        \"min\": 107.0,\n        \"max\": 696.0,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          311.0,\n          205.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sysBP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22.038096643544584,\n        \"min\": 83.5,\n        \"max\": 295.0,\n        \"num_unique_values\": 234,\n        \"samples\": [\n          109.0,\n          184.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diaBP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.9108496002255,\n        \"min\": 48.0,\n        \"max\": 142.5,\n        \"num_unique_values\": 146,\n        \"samples\": [\n          106.0,\n          108.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BMI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.080111062409028,\n        \"min\": 15.54,\n        \"max\": 56.8,\n        \"num_unique_values\": 1363,\n        \"samples\": [\n          24.56,\n          19.87\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"heartRate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.0265963516126,\n        \"min\": 44.0,\n        \"max\": 143.0,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          85.0,\n          47.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"glucose\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23.959998189237478,\n        \"min\": 40.0,\n        \"max\": 394.0,\n        \"num_unique_values\": 143,\n        \"samples\": [\n          394.0,\n          74.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TenYearCHD\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score\n","import warnings\n","warnings.filterwarnings('ignore')"],"metadata":{"id":"IOM4z_N0HmW2","executionInfo":{"status":"ok","timestamp":1725505123183,"user_tz":-330,"elapsed":1,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}}},"execution_count":41,"outputs":[]},{"cell_type":"code","source":["data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"-ea9N32ZHrlW","executionInfo":{"status":"ok","timestamp":1725505153444,"user_tz":-330,"elapsed":603,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}},"outputId":"66090543-9f6f-4406-9e74-c2b3772fc1ee"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   male  age  education  currentSmoker  cigsPerDay  BPMeds  prevalentStroke  \\\n","0     1   39        4.0              0         0.0     0.0                0   \n","1     0   46        2.0              0         0.0     0.0                0   \n","2     1   48        1.0              1        20.0     0.0                0   \n","3     0   61        3.0              1        30.0     0.0                0   \n","4     0   46        3.0              1        23.0     0.0                0   \n","\n","   prevalentHyp  diabetes  totChol  sysBP  diaBP    BMI  heartRate  glucose  \\\n","0             0         0    195.0  106.0   70.0  26.97       80.0     77.0   \n","1             0         0    250.0  121.0   81.0  28.73       95.0     76.0   \n","2             0         0    245.0  127.5   80.0  25.34       75.0     70.0   \n","3             1         0    225.0  150.0   95.0  28.58       65.0    103.0   \n","4             0         0    285.0  130.0   84.0  23.10       85.0     85.0   \n","\n","   TenYearCHD  \n","0           0  \n","1           0  \n","2           0  \n","3           1  \n","4           0  "],"text/html":["\n","  <div id=\"df-61392465-1383-4a53-9a00-e2cbc34310e2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>male</th>\n","      <th>age</th>\n","      <th>education</th>\n","      <th>currentSmoker</th>\n","      <th>cigsPerDay</th>\n","      <th>BPMeds</th>\n","      <th>prevalentStroke</th>\n","      <th>prevalentHyp</th>\n","      <th>diabetes</th>\n","      <th>totChol</th>\n","      <th>sysBP</th>\n","      <th>diaBP</th>\n","      <th>BMI</th>\n","      <th>heartRate</th>\n","      <th>glucose</th>\n","      <th>TenYearCHD</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>39</td>\n","      <td>4.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>195.0</td>\n","      <td>106.0</td>\n","      <td>70.0</td>\n","      <td>26.97</td>\n","      <td>80.0</td>\n","      <td>77.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>46</td>\n","      <td>2.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>250.0</td>\n","      <td>121.0</td>\n","      <td>81.0</td>\n","      <td>28.73</td>\n","      <td>95.0</td>\n","      <td>76.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>48</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>20.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>245.0</td>\n","      <td>127.5</td>\n","      <td>80.0</td>\n","      <td>25.34</td>\n","      <td>75.0</td>\n","      <td>70.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>61</td>\n","      <td>3.0</td>\n","      <td>1</td>\n","      <td>30.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>225.0</td>\n","      <td>150.0</td>\n","      <td>95.0</td>\n","      <td>28.58</td>\n","      <td>65.0</td>\n","      <td>103.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>46</td>\n","      <td>3.0</td>\n","      <td>1</td>\n","      <td>23.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>285.0</td>\n","      <td>130.0</td>\n","      <td>84.0</td>\n","      <td>23.10</td>\n","      <td>85.0</td>\n","      <td>85.0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-61392465-1383-4a53-9a00-e2cbc34310e2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-61392465-1383-4a53-9a00-e2cbc34310e2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-61392465-1383-4a53-9a00-e2cbc34310e2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fcdfbfe3-2f3d-4740-ac2d-516ac0195be1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fcdfbfe3-2f3d-4740-ac2d-516ac0195be1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fcdfbfe3-2f3d-4740-ac2d-516ac0195be1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 4238,\n  \"fields\": [\n    {\n      \"column\": \"male\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 32,\n        \"max\": 70,\n        \"num_unique_values\": 39,\n        \"samples\": [\n          34,\n          70\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.019790689312203,\n        \"min\": 1.0,\n        \"max\": 4.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"currentSmoker\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cigsPerDay\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.92009358782776,\n        \"min\": 0.0,\n        \"max\": 70.0,\n        \"num_unique_values\": 33,\n        \"samples\": [\n          19.0,\n          4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BPMeds\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.16958356790200033,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"prevalentStroke\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"prevalentHyp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diabetes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"totChol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 44.590334318749456,\n        \"min\": 107.0,\n        \"max\": 696.0,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          311.0,\n          205.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sysBP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22.038096643544584,\n        \"min\": 83.5,\n        \"max\": 295.0,\n        \"num_unique_values\": 234,\n        \"samples\": [\n          109.0,\n          184.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diaBP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.9108496002255,\n        \"min\": 48.0,\n        \"max\": 142.5,\n        \"num_unique_values\": 146,\n        \"samples\": [\n          106.0,\n          108.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BMI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.080111062409028,\n        \"min\": 15.54,\n        \"max\": 56.8,\n        \"num_unique_values\": 1363,\n        \"samples\": [\n          24.56,\n          19.87\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"heartRate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.0265963516126,\n        \"min\": 44.0,\n        \"max\": 143.0,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          85.0,\n          47.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"glucose\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23.959998189237478,\n        \"min\": 40.0,\n        \"max\": 394.0,\n        \"num_unique_values\": 143,\n        \"samples\": [\n          394.0,\n          74.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TenYearCHD\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["data.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"id":"OHSOtUg1H1AH","executionInfo":{"status":"ok","timestamp":1725505170693,"user_tz":-330,"elapsed":605,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}},"outputId":"eff88592-13da-4eaf-c6ab-415b6bd9c64c"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              male          age    education  currentSmoker   cigsPerDay  \\\n","count  4238.000000  4238.000000  4133.000000    4238.000000  4209.000000   \n","mean      0.429212    49.584946     1.978950       0.494101     9.003089   \n","std       0.495022     8.572160     1.019791       0.500024    11.920094   \n","min       0.000000    32.000000     1.000000       0.000000     0.000000   \n","25%       0.000000    42.000000     1.000000       0.000000     0.000000   \n","50%       0.000000    49.000000     2.000000       0.000000     0.000000   \n","75%       1.000000    56.000000     3.000000       1.000000    20.000000   \n","max       1.000000    70.000000     4.000000       1.000000    70.000000   \n","\n","            BPMeds  prevalentStroke  prevalentHyp     diabetes      totChol  \\\n","count  4185.000000      4238.000000   4238.000000  4238.000000  4188.000000   \n","mean      0.029630         0.005899      0.310524     0.025720   236.721585   \n","std       0.169584         0.076587      0.462763     0.158316    44.590334   \n","min       0.000000         0.000000      0.000000     0.000000   107.000000   \n","25%       0.000000         0.000000      0.000000     0.000000   206.000000   \n","50%       0.000000         0.000000      0.000000     0.000000   234.000000   \n","75%       0.000000         0.000000      1.000000     0.000000   263.000000   \n","max       1.000000         1.000000      1.000000     1.000000   696.000000   \n","\n","             sysBP        diaBP          BMI    heartRate      glucose  \\\n","count  4238.000000  4238.000000  4219.000000  4237.000000  3850.000000   \n","mean    132.352407    82.893464    25.802008    75.878924    81.966753   \n","std      22.038097    11.910850     4.080111    12.026596    23.959998   \n","min      83.500000    48.000000    15.540000    44.000000    40.000000   \n","25%     117.000000    75.000000    23.070000    68.000000    71.000000   \n","50%     128.000000    82.000000    25.400000    75.000000    78.000000   \n","75%     144.000000    89.875000    28.040000    83.000000    87.000000   \n","max     295.000000   142.500000    56.800000   143.000000   394.000000   \n","\n","        TenYearCHD  \n","count  4238.000000  \n","mean      0.151958  \n","std       0.359023  \n","min       0.000000  \n","25%       0.000000  \n","50%       0.000000  \n","75%       0.000000  \n","max       1.000000  "],"text/html":["\n","  <div id=\"df-8887a10b-1402-4151-b327-b557c4220199\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>male</th>\n","      <th>age</th>\n","      <th>education</th>\n","      <th>currentSmoker</th>\n","      <th>cigsPerDay</th>\n","      <th>BPMeds</th>\n","      <th>prevalentStroke</th>\n","      <th>prevalentHyp</th>\n","      <th>diabetes</th>\n","      <th>totChol</th>\n","      <th>sysBP</th>\n","      <th>diaBP</th>\n","      <th>BMI</th>\n","      <th>heartRate</th>\n","      <th>glucose</th>\n","      <th>TenYearCHD</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>4238.000000</td>\n","      <td>4238.000000</td>\n","      <td>4133.000000</td>\n","      <td>4238.000000</td>\n","      <td>4209.000000</td>\n","      <td>4185.000000</td>\n","      <td>4238.000000</td>\n","      <td>4238.000000</td>\n","      <td>4238.000000</td>\n","      <td>4188.000000</td>\n","      <td>4238.000000</td>\n","      <td>4238.000000</td>\n","      <td>4219.000000</td>\n","      <td>4237.000000</td>\n","      <td>3850.000000</td>\n","      <td>4238.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.429212</td>\n","      <td>49.584946</td>\n","      <td>1.978950</td>\n","      <td>0.494101</td>\n","      <td>9.003089</td>\n","      <td>0.029630</td>\n","      <td>0.005899</td>\n","      <td>0.310524</td>\n","      <td>0.025720</td>\n","      <td>236.721585</td>\n","      <td>132.352407</td>\n","      <td>82.893464</td>\n","      <td>25.802008</td>\n","      <td>75.878924</td>\n","      <td>81.966753</td>\n","      <td>0.151958</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.495022</td>\n","      <td>8.572160</td>\n","      <td>1.019791</td>\n","      <td>0.500024</td>\n","      <td>11.920094</td>\n","      <td>0.169584</td>\n","      <td>0.076587</td>\n","      <td>0.462763</td>\n","      <td>0.158316</td>\n","      <td>44.590334</td>\n","      <td>22.038097</td>\n","      <td>11.910850</td>\n","      <td>4.080111</td>\n","      <td>12.026596</td>\n","      <td>23.959998</td>\n","      <td>0.359023</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>32.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>107.000000</td>\n","      <td>83.500000</td>\n","      <td>48.000000</td>\n","      <td>15.540000</td>\n","      <td>44.000000</td>\n","      <td>40.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000</td>\n","      <td>42.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>206.000000</td>\n","      <td>117.000000</td>\n","      <td>75.000000</td>\n","      <td>23.070000</td>\n","      <td>68.000000</td>\n","      <td>71.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.000000</td>\n","      <td>49.000000</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>234.000000</td>\n","      <td>128.000000</td>\n","      <td>82.000000</td>\n","      <td>25.400000</td>\n","      <td>75.000000</td>\n","      <td>78.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.000000</td>\n","      <td>56.000000</td>\n","      <td>3.000000</td>\n","      <td>1.000000</td>\n","      <td>20.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>263.000000</td>\n","      <td>144.000000</td>\n","      <td>89.875000</td>\n","      <td>28.040000</td>\n","      <td>83.000000</td>\n","      <td>87.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.000000</td>\n","      <td>70.000000</td>\n","      <td>4.000000</td>\n","      <td>1.000000</td>\n","      <td>70.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>696.000000</td>\n","      <td>295.000000</td>\n","      <td>142.500000</td>\n","      <td>56.800000</td>\n","      <td>143.000000</td>\n","      <td>394.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8887a10b-1402-4151-b327-b557c4220199')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8887a10b-1402-4151-b327-b557c4220199 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8887a10b-1402-4151-b327-b557c4220199');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e7b7e661-c612-49dc-b56b-9b53c5f4b26e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e7b7e661-c612-49dc-b56b-9b53c5f4b26e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e7b7e661-c612-49dc-b56b-9b53c5f4b26e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"data\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"male\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1498.2116307917174,\n        \"min\": 0.0,\n        \"max\": 4238.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.42921189240207647,\n          1.0,\n          0.4950220855364925\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1482.955278652531,\n        \"min\": 8.572159925118484,\n        \"max\": 4238.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          49.58494572911751,\n          49.0,\n          4238.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1460.5295095025235,\n        \"min\": 1.0,\n        \"max\": 4133.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          4133.0,\n          1.9789499153157513,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"currentSmoker\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1498.2081010291288,\n        \"min\": 0.0,\n        \"max\": 4238.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.49410099103350635,\n          1.0,\n          0.5000241969070368\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cigsPerDay\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1482.6851658255594,\n        \"min\": 0.0,\n        \"max\": 4209.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          4209.0,\n          9.003088619624615,\n          70.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BPMeds\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1479.560410009123,\n        \"min\": 0.0,\n        \"max\": 4185.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.02962962962962963,\n          1.0,\n          0.16958356790200033\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"prevalentStroke\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1498.3046354997873,\n        \"min\": 0.0,\n        \"max\": 4238.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.005899008966493629,\n          1.0,\n          0.07658717064585817\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"prevalentHyp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1498.219254987568,\n        \"min\": 0.0,\n        \"max\": 4238.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.31052383199622463,\n          1.0,\n          0.4627626956737016\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diabetes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1498.2995058316505,\n        \"min\": 0.0,\n        \"max\": 4238.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.025719679093912224,\n          1.0,\n          0.15831642786899552\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"totChol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1403.9002477579238,\n        \"min\": 44.590334318749456,\n        \"max\": 4188.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          236.72158548233045,\n          234.0,\n          4188.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sysBP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1453.832095647962,\n        \"min\": 22.038096643544584,\n        \"max\": 4238.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          132.35240679565834,\n          128.0,\n          4238.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diaBP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1471.9456329708814,\n        \"min\": 11.9108496002255,\n        \"max\": 4238.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          82.89346389806512,\n          82.0,\n          4238.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BMI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1482.6891002296709,\n        \"min\": 4.080111062409028,\n        \"max\": 4219.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          25.80200758473572,\n          25.4,\n          4219.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"heartRate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1473.1708105984824,\n        \"min\": 12.0265963516126,\n        \"max\": 4237.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          75.87892376681614,\n          75.0,\n          4237.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"glucose\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1327.2109769547703,\n        \"min\": 23.959998189237478,\n        \"max\": 3850.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          81.96675324675324,\n          78.0,\n          3850.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TenYearCHD\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1498.282992616441,\n        \"min\": 0.0,\n        \"max\": 4238.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.1519584709768759,\n          1.0,\n          0.35902299199027266\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1Y3fxxHlH6V-","executionInfo":{"status":"ok","timestamp":1725505203445,"user_tz":-330,"elapsed":3,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}},"outputId":"2b1d921f-7f47-4036-dde3-17ad6345e487"},"execution_count":46,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 4238 entries, 0 to 4237\n","Data columns (total 16 columns):\n"," #   Column           Non-Null Count  Dtype  \n","---  ------           --------------  -----  \n"," 0   male             4238 non-null   int64  \n"," 1   age              4238 non-null   int64  \n"," 2   education        4133 non-null   float64\n"," 3   currentSmoker    4238 non-null   int64  \n"," 4   cigsPerDay       4209 non-null   float64\n"," 5   BPMeds           4185 non-null   float64\n"," 6   prevalentStroke  4238 non-null   int64  \n"," 7   prevalentHyp     4238 non-null   int64  \n"," 8   diabetes         4238 non-null   int64  \n"," 9   totChol          4188 non-null   float64\n"," 10  sysBP            4238 non-null   float64\n"," 11  diaBP            4238 non-null   float64\n"," 12  BMI              4219 non-null   float64\n"," 13  heartRate        4237 non-null   float64\n"," 14  glucose          3850 non-null   float64\n"," 15  TenYearCHD       4238 non-null   int64  \n","dtypes: float64(9), int64(7)\n","memory usage: 529.9 KB\n"]}]},{"cell_type":"code","source":["data.corr()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":571},"id":"V4rNFz8PIAC5","executionInfo":{"status":"ok","timestamp":1725505216296,"user_tz":-330,"elapsed":1525,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}},"outputId":"ca6812c0-a3be-4d15-f159-e8e36b6de236"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     male       age  education  currentSmoker  cigsPerDay  \\\n","male             1.000000 -0.028979   0.017352       0.197596    0.317930   \n","age             -0.028979  1.000000  -0.165883      -0.213748   -0.192791   \n","education        0.017352 -0.165883   1.000000       0.018532    0.008085   \n","currentSmoker    0.197596 -0.213748   0.018532       1.000000    0.769690   \n","cigsPerDay       0.317930 -0.192791   0.008085       0.769690    1.000000   \n","BPMeds          -0.052506  0.122995  -0.010815      -0.048938   -0.046134   \n","prevalentStroke -0.004546  0.057655  -0.035112      -0.032988   -0.032707   \n","prevalentHyp     0.005313  0.307194  -0.081970      -0.103260   -0.066146   \n","diabetes         0.015708  0.101258  -0.038680      -0.044295   -0.037067   \n","totChol         -0.070322  0.262131  -0.023115      -0.046562   -0.026320   \n","sysBP           -0.035989  0.394302  -0.129631      -0.130230   -0.088780   \n","diaBP            0.057933  0.206104  -0.062316      -0.107746   -0.056632   \n","BMI              0.081672  0.135800  -0.137504      -0.167650   -0.092856   \n","heartRate       -0.116620 -0.012823  -0.054206       0.062356    0.075157   \n","glucose          0.006083  0.122256  -0.035721      -0.056826   -0.058960   \n","TenYearCHD       0.088428  0.225256  -0.054059       0.019456    0.057884   \n","\n","                   BPMeds  prevalentStroke  prevalentHyp  diabetes   totChol  \\\n","male            -0.052506        -0.004546      0.005313  0.015708 -0.070322   \n","age              0.122995         0.057655      0.307194  0.101258  0.262131   \n","education       -0.010815        -0.035112     -0.081970 -0.038680 -0.023115   \n","currentSmoker   -0.048938        -0.032988     -0.103260 -0.044295 -0.046562   \n","cigsPerDay      -0.046134        -0.032707     -0.066146 -0.037067 -0.026320   \n","BPMeds           1.000000         0.117365      0.261187  0.052047  0.080558   \n","prevalentStroke  0.117365         1.000000      0.074830  0.006949  0.000067   \n","prevalentHyp     0.261187         0.074830      1.000000  0.077808  0.163993   \n","diabetes         0.052047         0.006949      0.077808  1.000000  0.040278   \n","totChol          0.080558         0.000067      0.163993  0.040278  1.000000   \n","sysBP            0.254219         0.057009      0.696755  0.111283  0.208908   \n","diaBP            0.194227         0.045190      0.615751  0.050329  0.165182   \n","BMI              0.100668         0.025891      0.301318  0.087036  0.115767   \n","heartRate        0.015233        -0.017676      0.147261  0.048994  0.091125   \n","glucose          0.051176         0.018431      0.086834  0.617627  0.046408   \n","TenYearCHD       0.087489         0.061810      0.177603  0.097317  0.082184   \n","\n","                    sysBP     diaBP       BMI  heartRate   glucose  TenYearCHD  \n","male            -0.035989  0.057933  0.081672  -0.116620  0.006083    0.088428  \n","age              0.394302  0.206104  0.135800  -0.012823  0.122256    0.225256  \n","education       -0.129631 -0.062316 -0.137504  -0.054206 -0.035721   -0.054059  \n","currentSmoker   -0.130230 -0.107746 -0.167650   0.062356 -0.056826    0.019456  \n","cigsPerDay      -0.088780 -0.056632 -0.092856   0.075157 -0.058960    0.057884  \n","BPMeds           0.254219  0.194227  0.100668   0.015233  0.051176    0.087489  \n","prevalentStroke  0.057009  0.045190  0.025891  -0.017676  0.018431    0.061810  \n","prevalentHyp     0.696755  0.615751  0.301318   0.147261  0.086834    0.177603  \n","diabetes         0.111283  0.050329  0.087036   0.048994  0.617627    0.097317  \n","totChol          0.208908  0.165182  0.115767   0.091125  0.046408    0.082184  \n","sysBP            1.000000  0.784002  0.326981   0.182246  0.140621    0.216429  \n","diaBP            0.784002  1.000000  0.377588   0.181255  0.061231    0.145299  \n","BMI              0.326981  0.377588  1.000000   0.067678  0.087377    0.075192  \n","heartRate        0.182246  0.181255  0.067678   1.000000  0.094500    0.022913  \n","glucose          0.140621  0.061231  0.087377   0.094500  1.000000    0.125544  \n","TenYearCHD       0.216429  0.145299  0.075192   0.022913  0.125544    1.000000  "],"text/html":["\n","  <div id=\"df-f0c46b03-865a-48fe-b99d-e817574cebcf\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>male</th>\n","      <th>age</th>\n","      <th>education</th>\n","      <th>currentSmoker</th>\n","      <th>cigsPerDay</th>\n","      <th>BPMeds</th>\n","      <th>prevalentStroke</th>\n","      <th>prevalentHyp</th>\n","      <th>diabetes</th>\n","      <th>totChol</th>\n","      <th>sysBP</th>\n","      <th>diaBP</th>\n","      <th>BMI</th>\n","      <th>heartRate</th>\n","      <th>glucose</th>\n","      <th>TenYearCHD</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>male</th>\n","      <td>1.000000</td>\n","      <td>-0.028979</td>\n","      <td>0.017352</td>\n","      <td>0.197596</td>\n","      <td>0.317930</td>\n","      <td>-0.052506</td>\n","      <td>-0.004546</td>\n","      <td>0.005313</td>\n","      <td>0.015708</td>\n","      <td>-0.070322</td>\n","      <td>-0.035989</td>\n","      <td>0.057933</td>\n","      <td>0.081672</td>\n","      <td>-0.116620</td>\n","      <td>0.006083</td>\n","      <td>0.088428</td>\n","    </tr>\n","    <tr>\n","      <th>age</th>\n","      <td>-0.028979</td>\n","      <td>1.000000</td>\n","      <td>-0.165883</td>\n","      <td>-0.213748</td>\n","      <td>-0.192791</td>\n","      <td>0.122995</td>\n","      <td>0.057655</td>\n","      <td>0.307194</td>\n","      <td>0.101258</td>\n","      <td>0.262131</td>\n","      <td>0.394302</td>\n","      <td>0.206104</td>\n","      <td>0.135800</td>\n","      <td>-0.012823</td>\n","      <td>0.122256</td>\n","      <td>0.225256</td>\n","    </tr>\n","    <tr>\n","      <th>education</th>\n","      <td>0.017352</td>\n","      <td>-0.165883</td>\n","      <td>1.000000</td>\n","      <td>0.018532</td>\n","      <td>0.008085</td>\n","      <td>-0.010815</td>\n","      <td>-0.035112</td>\n","      <td>-0.081970</td>\n","      <td>-0.038680</td>\n","      <td>-0.023115</td>\n","      <td>-0.129631</td>\n","      <td>-0.062316</td>\n","      <td>-0.137504</td>\n","      <td>-0.054206</td>\n","      <td>-0.035721</td>\n","      <td>-0.054059</td>\n","    </tr>\n","    <tr>\n","      <th>currentSmoker</th>\n","      <td>0.197596</td>\n","      <td>-0.213748</td>\n","      <td>0.018532</td>\n","      <td>1.000000</td>\n","      <td>0.769690</td>\n","      <td>-0.048938</td>\n","      <td>-0.032988</td>\n","      <td>-0.103260</td>\n","      <td>-0.044295</td>\n","      <td>-0.046562</td>\n","      <td>-0.130230</td>\n","      <td>-0.107746</td>\n","      <td>-0.167650</td>\n","      <td>0.062356</td>\n","      <td>-0.056826</td>\n","      <td>0.019456</td>\n","    </tr>\n","    <tr>\n","      <th>cigsPerDay</th>\n","      <td>0.317930</td>\n","      <td>-0.192791</td>\n","      <td>0.008085</td>\n","      <td>0.769690</td>\n","      <td>1.000000</td>\n","      <td>-0.046134</td>\n","      <td>-0.032707</td>\n","      <td>-0.066146</td>\n","      <td>-0.037067</td>\n","      <td>-0.026320</td>\n","      <td>-0.088780</td>\n","      <td>-0.056632</td>\n","      <td>-0.092856</td>\n","      <td>0.075157</td>\n","      <td>-0.058960</td>\n","      <td>0.057884</td>\n","    </tr>\n","    <tr>\n","      <th>BPMeds</th>\n","      <td>-0.052506</td>\n","      <td>0.122995</td>\n","      <td>-0.010815</td>\n","      <td>-0.048938</td>\n","      <td>-0.046134</td>\n","      <td>1.000000</td>\n","      <td>0.117365</td>\n","      <td>0.261187</td>\n","      <td>0.052047</td>\n","      <td>0.080558</td>\n","      <td>0.254219</td>\n","      <td>0.194227</td>\n","      <td>0.100668</td>\n","      <td>0.015233</td>\n","      <td>0.051176</td>\n","      <td>0.087489</td>\n","    </tr>\n","    <tr>\n","      <th>prevalentStroke</th>\n","      <td>-0.004546</td>\n","      <td>0.057655</td>\n","      <td>-0.035112</td>\n","      <td>-0.032988</td>\n","      <td>-0.032707</td>\n","      <td>0.117365</td>\n","      <td>1.000000</td>\n","      <td>0.074830</td>\n","      <td>0.006949</td>\n","      <td>0.000067</td>\n","      <td>0.057009</td>\n","      <td>0.045190</td>\n","      <td>0.025891</td>\n","      <td>-0.017676</td>\n","      <td>0.018431</td>\n","      <td>0.061810</td>\n","    </tr>\n","    <tr>\n","      <th>prevalentHyp</th>\n","      <td>0.005313</td>\n","      <td>0.307194</td>\n","      <td>-0.081970</td>\n","      <td>-0.103260</td>\n","      <td>-0.066146</td>\n","      <td>0.261187</td>\n","      <td>0.074830</td>\n","      <td>1.000000</td>\n","      <td>0.077808</td>\n","      <td>0.163993</td>\n","      <td>0.696755</td>\n","      <td>0.615751</td>\n","      <td>0.301318</td>\n","      <td>0.147261</td>\n","      <td>0.086834</td>\n","      <td>0.177603</td>\n","    </tr>\n","    <tr>\n","      <th>diabetes</th>\n","      <td>0.015708</td>\n","      <td>0.101258</td>\n","      <td>-0.038680</td>\n","      <td>-0.044295</td>\n","      <td>-0.037067</td>\n","      <td>0.052047</td>\n","      <td>0.006949</td>\n","      <td>0.077808</td>\n","      <td>1.000000</td>\n","      <td>0.040278</td>\n","      <td>0.111283</td>\n","      <td>0.050329</td>\n","      <td>0.087036</td>\n","      <td>0.048994</td>\n","      <td>0.617627</td>\n","      <td>0.097317</td>\n","    </tr>\n","    <tr>\n","      <th>totChol</th>\n","      <td>-0.070322</td>\n","      <td>0.262131</td>\n","      <td>-0.023115</td>\n","      <td>-0.046562</td>\n","      <td>-0.026320</td>\n","      <td>0.080558</td>\n","      <td>0.000067</td>\n","      <td>0.163993</td>\n","      <td>0.040278</td>\n","      <td>1.000000</td>\n","      <td>0.208908</td>\n","      <td>0.165182</td>\n","      <td>0.115767</td>\n","      <td>0.091125</td>\n","      <td>0.046408</td>\n","      <td>0.082184</td>\n","    </tr>\n","    <tr>\n","      <th>sysBP</th>\n","      <td>-0.035989</td>\n","      <td>0.394302</td>\n","      <td>-0.129631</td>\n","      <td>-0.130230</td>\n","      <td>-0.088780</td>\n","      <td>0.254219</td>\n","      <td>0.057009</td>\n","      <td>0.696755</td>\n","      <td>0.111283</td>\n","      <td>0.208908</td>\n","      <td>1.000000</td>\n","      <td>0.784002</td>\n","      <td>0.326981</td>\n","      <td>0.182246</td>\n","      <td>0.140621</td>\n","      <td>0.216429</td>\n","    </tr>\n","    <tr>\n","      <th>diaBP</th>\n","      <td>0.057933</td>\n","      <td>0.206104</td>\n","      <td>-0.062316</td>\n","      <td>-0.107746</td>\n","      <td>-0.056632</td>\n","      <td>0.194227</td>\n","      <td>0.045190</td>\n","      <td>0.615751</td>\n","      <td>0.050329</td>\n","      <td>0.165182</td>\n","      <td>0.784002</td>\n","      <td>1.000000</td>\n","      <td>0.377588</td>\n","      <td>0.181255</td>\n","      <td>0.061231</td>\n","      <td>0.145299</td>\n","    </tr>\n","    <tr>\n","      <th>BMI</th>\n","      <td>0.081672</td>\n","      <td>0.135800</td>\n","      <td>-0.137504</td>\n","      <td>-0.167650</td>\n","      <td>-0.092856</td>\n","      <td>0.100668</td>\n","      <td>0.025891</td>\n","      <td>0.301318</td>\n","      <td>0.087036</td>\n","      <td>0.115767</td>\n","      <td>0.326981</td>\n","      <td>0.377588</td>\n","      <td>1.000000</td>\n","      <td>0.067678</td>\n","      <td>0.087377</td>\n","      <td>0.075192</td>\n","    </tr>\n","    <tr>\n","      <th>heartRate</th>\n","      <td>-0.116620</td>\n","      <td>-0.012823</td>\n","      <td>-0.054206</td>\n","      <td>0.062356</td>\n","      <td>0.075157</td>\n","      <td>0.015233</td>\n","      <td>-0.017676</td>\n","      <td>0.147261</td>\n","      <td>0.048994</td>\n","      <td>0.091125</td>\n","      <td>0.182246</td>\n","      <td>0.181255</td>\n","      <td>0.067678</td>\n","      <td>1.000000</td>\n","      <td>0.094500</td>\n","      <td>0.022913</td>\n","    </tr>\n","    <tr>\n","      <th>glucose</th>\n","      <td>0.006083</td>\n","      <td>0.122256</td>\n","      <td>-0.035721</td>\n","      <td>-0.056826</td>\n","      <td>-0.058960</td>\n","      <td>0.051176</td>\n","      <td>0.018431</td>\n","      <td>0.086834</td>\n","      <td>0.617627</td>\n","      <td>0.046408</td>\n","      <td>0.140621</td>\n","      <td>0.061231</td>\n","      <td>0.087377</td>\n","      <td>0.094500</td>\n","      <td>1.000000</td>\n","      <td>0.125544</td>\n","    </tr>\n","    <tr>\n","      <th>TenYearCHD</th>\n","      <td>0.088428</td>\n","      <td>0.225256</td>\n","      <td>-0.054059</td>\n","      <td>0.019456</td>\n","      <td>0.057884</td>\n","      <td>0.087489</td>\n","      <td>0.061810</td>\n","      <td>0.177603</td>\n","      <td>0.097317</td>\n","      <td>0.082184</td>\n","      <td>0.216429</td>\n","      <td>0.145299</td>\n","      <td>0.075192</td>\n","      <td>0.022913</td>\n","      <td>0.125544</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f0c46b03-865a-48fe-b99d-e817574cebcf')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f0c46b03-865a-48fe-b99d-e817574cebcf button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f0c46b03-865a-48fe-b99d-e817574cebcf');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2206ea47-0bca-44c3-b7ee-99643e5199cf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2206ea47-0bca-44c3-b7ee-99643e5199cf')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2206ea47-0bca-44c3-b7ee-99643e5199cf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"data\",\n  \"rows\": 16,\n  \"fields\": [\n    {\n      \"column\": \"male\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.26398432472353295,\n        \"min\": -0.11661957511763056,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          1.0,\n          -0.02897863938604286,\n          -0.05250614332830896\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.28851734828221337,\n        \"min\": -0.213747945265249,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          -0.02897863938604286,\n          1.0,\n          0.12299517407660093\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.26859760412968814,\n        \"min\": -0.1658829364493281,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          0.01735197672631598,\n          -0.1658829364493281,\n          -0.010814936728227816\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"currentSmoker\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.33488214654577947,\n        \"min\": -0.213747945265249,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          0.1975964735347461,\n          -0.213747945265249,\n          -0.04893836130046455\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cigsPerDay\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.32926065713056835,\n        \"min\": -0.1927908537098281,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          0.31793005594171525,\n          -0.1927908537098281,\n          -0.046133548718192294\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BPMeds\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2503354005385196,\n        \"min\": -0.05250614332830896,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          -0.05250614332830896,\n          0.12299517407660093,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"prevalentStroke\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.24819410506960207,\n        \"min\": -0.03511248644944133,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          -0.004546326644938703,\n          0.05765481580465202,\n          0.1173647202710275\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"prevalentHyp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.30548605072830126,\n        \"min\": -0.10325974038796312,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          0.0053133490608055925,\n          0.3071940768671203,\n          0.2611868186178432\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diabetes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2760154754161902,\n        \"min\": -0.04429512082472811,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          0.015707987432113265,\n          0.10125768873071221,\n          0.05204674684028959\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"totChol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2504023320332226,\n        \"min\": -0.07032186088687752,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          -0.07032186088687752,\n          0.262131022498861,\n          0.08055783845606404\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sysBP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.33016358820874275,\n        \"min\": -0.13023011587156863,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          -0.035989265418974334,\n          0.3943015379245825,\n          0.2542189551392891\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diaBP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.31540246893831425,\n        \"min\": -0.10774649457796896,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          0.057933468655128176,\n          0.20610398945367533,\n          0.1942265042929355\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BMI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2726632071363564,\n        \"min\": -0.16765003793815433,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          0.08167215398814777,\n          0.1357995683088472,\n          0.10066817502474716\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"heartRate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.25028027243487955,\n        \"min\": -0.11661957511763056,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          -0.11661957511763056,\n          -0.012822996650614205,\n          0.015233096426589106\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"glucose\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2757306767440103,\n        \"min\": -0.05895975679747391,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          0.006082510502238282,\n          0.12225578018944373,\n          0.051175810005965244\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TenYearCHD\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.23744081385381277,\n        \"min\": -0.05405895930035676,\n        \"max\": 1.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          0.08842756735157493,\n          0.22525610383059044,\n          0.08748857747304171\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["data.isnull().sum()"],"metadata":{"id":"YSmAX9KUIIOq","executionInfo":{"status":"ok","timestamp":1725505249084,"user_tz":-330,"elapsed":1248,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}},"outputId":"baf88c5b-3103-42ec-8a83-17e98b8fa679","colab":{"base_uri":"https://localhost:8080/","height":586}},"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["male                 0\n","age                  0\n","education          105\n","currentSmoker        0\n","cigsPerDay          29\n","BPMeds              53\n","prevalentStroke      0\n","prevalentHyp         0\n","diabetes             0\n","totChol             50\n","sysBP                0\n","diaBP                0\n","BMI                 19\n","heartRate            1\n","glucose            388\n","TenYearCHD           0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>male</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>age</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>education</th>\n","      <td>105</td>\n","    </tr>\n","    <tr>\n","      <th>currentSmoker</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>cigsPerDay</th>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>BPMeds</th>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>prevalentStroke</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>prevalentHyp</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>diabetes</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>totChol</th>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>sysBP</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>diaBP</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>BMI</th>\n","      <td>19</td>\n","    </tr>\n","    <tr>\n","      <th>heartRate</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>glucose</th>\n","      <td>388</td>\n","    </tr>\n","    <tr>\n","      <th>TenYearCHD</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["# Model evaluation\n","from sklearn.metrics import accuracy_score\n","from sklearn.metrics import precision_recall_fscore_support\n","import numpy as np\n","print(\"Accuracy:\", np.round(accuracy_score(y_test, y_pred), 2))"],"metadata":{"id":"QZiTJU4MFTMy","executionInfo":{"status":"aborted","timestamp":1725504366956,"user_tz":-330,"elapsed":12,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#another dataset"],"metadata":{"id":"tydbbyrOKQ0F"}},{"cell_type":"code","source":["import pandas as pd\n","data = pd.read_csv('/content/drive/MyDrive/DL_2022/GHI_Report_.csv')\n","data"],"metadata":{"id":"ZRUOyx5WFr4g","executionInfo":{"status":"aborted","timestamp":1725504366956,"user_tz":-330,"elapsed":12,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X = data.iloc[:,:-1]\n","Y = data.iloc[:,-1]"],"metadata":{"id":"aIbxGbKaLlwY","executionInfo":{"status":"aborted","timestamp":1725504366956,"user_tz":-330,"elapsed":11,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#create train and test sets\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split( X, Y, test_size=0.30, shuffle =True,\n","                    random_state=1)"],"metadata":{"id":"aulD1D6fLGa5","executionInfo":{"status":"aborted","timestamp":1725504366957,"user_tz":-330,"elapsed":12,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","from sklearn.linear_model import LinearRegression\n","lre=LinearRegression()\n","lre.fit(X_train,y_train)\n","y_pred = lre.predict(X_test)\n","print(f\"predicted response:\\n{y_pred}\")\n","r_squared = lre.score(X_test, y_test)\n","print(\"R Square value is \",r_squared)"],"metadata":{"id":"8hv882rrNCXh","executionInfo":{"status":"aborted","timestamp":1725504366957,"user_tz":-330,"elapsed":12,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import mean_squared_error\n","MSE = mean_squared_error(y_test, y_pred)\n","RMSE = mean_squared_error(y_test, y_pred, squared=False)\n","print(\"MSE is:\", MSE)\n","print(\"RMSE is:\", RMSE)\n","print(\"R_squared is:\", r_squared)"],"metadata":{"id":"peWh4IW9Svze","executionInfo":{"status":"aborted","timestamp":1725504366957,"user_tz":-330,"elapsed":12,"user":{"displayName":"Hema Sri","userId":"12825264497191066277"}}},"execution_count":null,"outputs":[]}]}